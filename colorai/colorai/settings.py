"""
Django settings for colorai project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

import environ
from dotenv import load_dotenv
from replicate.exceptions import ModelError

env = environ.Env()
environ.Env.read_env()


load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-ki(3ys&8nks9w6m%)_9#bte5su@#*@nlpaagnujoj7*mwv=)8i"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

APP_NAME = os.environ.get("FLY_APP_NAME")
ALLOWED_HOSTS = ["*", f"{APP_NAME}.fly.dev"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_extensions",
    "coloring.apps.ColoringConfig",
    "corsheaders",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
]

CORS_ALLOWED_ORIGINS = [
    "https://localhost:3000",
    "http://localhost:3000",
    "https://localhost:8080",
    "http://localhost:8080",
    "https://coloring-ai.art",
    "https://34.194.127.46",
    "https://54.234.237.108",
    "https://3.208.120.145",
    "https://44.226.236.210",
    "https://44.241.183.62",
    "https://100.20.172.113",
    "https://88c6-89-205-63-79.ngrok-free.app",
]

CORS_ALLOW_METHODS = [
    "GET",
    "POST",
    "PUT",
    "PATCH",
    "DELETE",
    "OPTIONS",
]

CORS_ALLOW_HEADERS = [
    "content-type",
    "authorization",
    "x-csrftoken",
    "accept",
    "x-requested-with",
    "X-Visitor-ID",
]

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "coloring.backends.SupabaseAuthBackend",
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "coloring.auth.SupabaseAuthentication",
        "rest_framework.authentication.SessionAuthentication",
    ],
}


ROOT_URLCONF = "colorai.urls"


TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "colorai.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "HOST": "aws-0-us-east-1.pooler.supabase.com",
        "NAME": "postgres",
        "USER": "postgres.mrikhcwgibcpxfalukhk",
        "PORT": "6543",
        "PASSWORD": "kd4up4WU77u3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

MEDIA_URL = "media/"  # URL to access media files
MEDIA_ROOT = os.path.join(BASE_DIR, "media/")  # Directory to store media files

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

CORS_ALLOW_ALL_ORIGINS = True

AUTH_USER_MODEL = "coloring.User"

REPLICATE_API_TOKEN = os.getenv("REPLICATE_API_TOKEN")

SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_JWT_SECRET = os.getenv("SUPABASE_JWT_SECRET")
SUPABASE_PUBLIC_KEY = os.getenv("SUPABASE_PUBLIC_KEY")

DISCORD_WEBHOOK_URL = os.getenv("DISCORD_WEBHOOK_URL")
DISCORD_SUBS_WEBHOOK = os.getenv("DISCORD_SUBS_WEBHOOK")
DISCORD_STATS_WEBHOOK = os.getenv("DISCORD_STATS_WEBHOOK")

STORAGE_BUCKET_NAME = os.getenv("STORAGE_BUCKET_NAME")
STORAGE_BUCKET_LOCATION = os.getenv("STORAGE_BUCKET_LOCATION")
STORAGE_BUCKET_URL = os.getenv("STORAGE_BUCKET_URL")
STORAGE_KEY = os.getenv("STORAGE_KEY")
STORAGE_SECRET = os.getenv("STORAGE_SECRET")

POLAR_WEBHOOK_SECRET_SUBSCRIBTION = os.getenv("POLAR_WEBHOOK_SECRET_SUBSCRIBTION")
POLAR_WEBHOOK_SECRET_PURCHASE = os.getenv("POLAR_WEBHOOK_SECRET_PURCHASE")
